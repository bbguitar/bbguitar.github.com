<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Spencer Westwood]]></title>
  <link href="http://bbguitar.github.com/atom.xml" rel="self"/>
  <link href="http://bbguitar.github.com/"/>
  <updated>2012-05-18T10:26:15+01:00</updated>
  <id>http://bbguitar.github.com/</id>
  <author>
    <name><![CDATA[Spencer Westwood]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iPhone diorama video]]></title>
    <link href="http://bbguitar.github.com/blog/2012/05/17/iphone-diorama-video/"/>
    <updated>2012-05-17T16:06:00+01:00</updated>
    <id>http://bbguitar.github.com/blog/2012/05/17/iphone-diorama-video</id>
    <content type="html"><![CDATA[<p>Inspiring video.</p>

<p>Apparently this was done with Maya, rendered in Vray with Pftrack and After Effects.</p>

<p>That&#8217;s one expensive toolset.</p>

<p>I wonder if anyone will do a remake using blender/cycles and camera tracking now that
the tomato branch has merged tracking into the core in 2.6.x.</p>

<iframe width="400" height="225" src="http://player.vimeo.com/video/40056491 " frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Game Development ToolChains]]></title>
    <link href="http://bbguitar.github.com/blog/2012/05/17/ios-game-development-toolchains/"/>
    <updated>2012-05-17T09:05:00+01:00</updated>
    <id>http://bbguitar.github.com/blog/2012/05/17/ios-game-development-toolchains</id>
    <content type="html"><![CDATA[<p>In an effort to finally getting round to creating an iOS game I thought I&#8217;d
brain dump my software toolchest.</p>

<h2>Programming</h2>

<p>This part is easy, and although I can appreciate lua I&#8217;m really going to stick to Objective-C
with a smattering of C++ if needed. Its way too easy to get trawled into multi-language projects
and keeping focused on one language makes things simple.</p>

<p>Whilst I love the idea of TDD, BDD and lots of unit tests, like many people, I&#8217;ve found Testing to
be extremely difficult in iOS. For games its much harder. I may build discrete unit tests for any AI and logic inside classes but only if the mocks are not too brittle.</p>

<p>I tend to use git as my code management tool and I&#8217;ll probably push up to github as time goes on.</p>

<p>I&#8217;m not going to get into code coverage and the like for my first iOS game.</p>

<h2>IDE</h2>

<p>Not much choice here xcode is the <em>de facto</em> and I&#8217;ll swap between vim and xcode as needed.
I could use eclipse and spend a few hours plugging in all the build stuff but I&#8217;d still need
to swap back into xcode for code signing and the other things that are easy to do like archiving,
building and analysis.
<em>Note to apple, could we have editor plugins to xcode so I could use vim or emacs bindings without
lot of hassle?</em></p>

<h2>Frameworks</h2>

<p>I&#8217;ve looked through half a dozen and keep coming back to the same conclusion: <strong><em>Cocos 2D</em></strong></p>

<p>There&#8217;s lots of activity, lots of people using it, lots of apps already using it and there are
a few books out there too.</p>

<h2>Project management</h2>

<p>This is the one most solo developers ignore. I&#8217;ve used several systems over the years but for ease of
setup I prefer to set up a local <strong>trac</strong> instance and use it as a project dumping ground.</p>

<p>I&#8217;ve played around with plugging agilo into trac and I&#8217;ve also got a project pier instance setup if I need it. However I keep coming back to using trac as a todo list especially as I can integrate git into it
easily.</p>

<p>I like <em>basecamp</em> but I can&#8217;t justify the monthly cost until I&#8217;ve got two or three profitable apps under my belt and I&#8217;d rather not start with it at the moment even on a free plan.</p>

<h2>Media</h2>

<h3>Graphics</h3>

<ul>
<li><strong><em>Blender 3D</em></strong> for as much as I need for sprite creation and backgrounds.</li>
<li><strong><em>Inkscape/Gimp</em></strong> for any other pixel level work</li>
</ul>


<p>Depending on the game design I may also need tools to create bitmap fonts, pack textures,
create layouts and physics object tracing. I may be persuaded to buy some tools for this
if I can avoid the moths coming out of my wallet at the time.</p>

<h3>Music/SFX</h3>

<p>This is a no-brainer for me. As a legitimate owner of Reason 6 I&#8217;ll most likely use that
for background music. I might use some of the Garageband loops to begin with but replace them
afterwards. The initial generation might come from some other tools like mma or a pD setup but
I&#8217;ll experiment when the time comes.</p>

<p>It&#8217;s easy to become bewildered by the vast array of tools to solve each problem but experience
has shown me that its better to focus on just a small set.</p>

<p>If you have suggestions for other tools that I should include, put them in the discussion below.</p>
]]></content>
  </entry>
  
</feed>
